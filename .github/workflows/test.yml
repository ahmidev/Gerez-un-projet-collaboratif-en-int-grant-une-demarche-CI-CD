name: Integration continuous

# Déclenche le workflow sur les push et pull requests vers la branche main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Définit les jobs du workflow
jobs:
  frontend-test:
    # Le job est exécuté sur une machine virtuelle Ubuntu
    runs-on: ubuntu-latest


    steps:
      # Checkout le code source
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configuration de Node.js (nécessaire pour Angular)
      - name: Set up Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Installer les dépendances
      - name: Install dependencies
        working-directory: front
        run: |
          yarn install

      # Lancer les tests
      - name: Run tests
        working-directory: front
        run: |
          npm run test -- --watch=false --browsers=ChromeHeadless

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: front
          args: >
            -Dsonar.projectKey=RazzakKhal_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=razzakkhal

  backend-test:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: build and test and generate converage
        working-directory: back
        run: mvn clean install
        
      - name: Upload Jacoco Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: ./back/target/site/jacoco

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: back
          args: >
            -Dsonar.java.binaries=target/classes
            -Dsonar.projectKey=ahmidev_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=ahmidev